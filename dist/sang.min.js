!function(){"use strict";angular.module("player",[]).config(["$provide",function($provide){$provide.factory("AudioPlayer",function(){return new Player})}]),angular.module("sang",["player"]).config(["$provide",function($provide){$provide.factory("Sang",["AudioPlayer","$http",function(AudioPlayer,$http){var sang={clientId:"",resolve:function(playlistUrl){var self=this;$http.get("https://api.soundcloud.com/resolve",{params:{client_id:this.clientId,url:playlistUrl}}).then(function(response){self.tracks=self.mapTracks(response.data.tracks)})},mapTracks:function(tracks){var self=this;return tracks.map(function(track){var src=track.stream_url,sep=-1===src.indexOf("?")?"?":"&";return track.src=src+sep+"client_id="+self.clientId,track})},player:AudioPlayer,currentTrack:{},currentTime:0,duration:0,tracks:[],index:0,playing:!1,play:function(idx){"number"==typeof idx&&this.tracks.length&&(this.index=idx%this.tracks.length,this.currentTrack=this.tracks[this.index]),this.playing=!0,this.player.play(this.currentTrack.src)},pause:function(){this.playing=!1,this.player.pause()},playPause:function(idx){this.playing?this.pause():this.play(idx)},previous:function(){this.index--,this.playing&&this.play(this.index)},next:function(){this.index++,this.playing&&this.play(this.index)},seek:function(e){this.player.seek(e)}};return sang.player.addEventListener("timeupdate",function(){}),sang}])}])}(),function(){"use strict";angular.module("sang").directive("sangPlayer",["Sang",function(SangService){return{restrict:"EA",scope:!1,link:function(scope,_elem,attr){scope.sang=SangService}}}])}();